# -----------------------
#
# Run a full build-and-test from the git repo
# using a combination of conda and pip to install
# all optional dependencies.
#
# This is the 'full' test suite.
#
# -----------------------

name: Build and test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Python ${{ matrix.python-version }} (${{ matrix.os }})

    strategy:
      fail-fast: false
      matrix:
        os:
          - macOS
          - Ubuntu
        python-version:
          - 2.7
          - 3.5
          - 3.6
          - 3.7
          - 3.8
          - 3.9
    runs-on: ${{ matrix.os }}-latest

    steps:
    - name: Get source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install upstream requirements
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get -y -q install \
            libkrb5-dev \
        ;

    - name: Install requirements
      run: |
        python -m pip install --quiet --upgrade pip wheel
        # install requirements
        python -m pip install -r requirements.txt
        # install LAL (for glue)
        python -m pip install lalsuite
        # install test-only requirements
        python -m pip install coveralls

    - name: Install DQSegDB
      run: python -m pip install --editable . --no-build-isolation -vv

    - name: Package list
      run: python -m pip list installed

    - name: Run command line tests
      run: |
        for script in ${{ env.pythonLocation }}/bin/*_dqsegdb; do
            python -m coverage run \
                --append \
                --source=dqsegdb \
                ${script} --help
        done

    - name: Coverage report
      run: python -m coverage report --show-missing

    - name: Prepare codecov upload
      run: |
        # covert report to XML (codecov can't handle sqlite, probably)
        python -m coverage xml
        rm -fv .coverage

    - name: Publish coverage to Codecov
      uses: codecov/codecov-action@v1.2.1
      with:
        flags: ${{ runner.os }},python${{ matrix.python-version }}

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: pytest-${{ matrix.os }}-${{ matrix.python-version }}
        path: pytest.xml
